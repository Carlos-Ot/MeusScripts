#!/bin/bash

# Cabeçalho
# ----------------------------------------------------------------------------
# Esqueleto de Script.
# Script feito para gerar uma especie de casca de script, facilitando na hora da criação de um script novo
#
# Uso: ./esqueleto <nome_do_novo_script>
# Ex.: ./esqueleto dummy_script
#
# Autor: Frank Junior <frankcbjunior@gmail.com>
# Desde: 2013-12-24
# Versão: 1
# ----------------------------------------------------------------------------

# Variáveis
# ----------------------------------------------------------------------------
nome_do_script="$1"
readme="README.md"
nome_do_usuario=""
email_do_usuario=""

# DEBUG = 0, desligado
# DEBUG = 1, ligado
DEBUG=0

# cores
cor_amarelo="\033[33m"
cor_verde="\033[32m"
cor_vermelho="\033[31m"
fecha_cor="\033[m"


# Funcoes
# ----------------------------------------------------------------------------

# funcao de debug
function debug(){
	[ "$DEBUG" = 1 ] && echo "[DEBUG] $*"
}

# imprime msg amarelo
function print_info(){
	printf "${cor_amarelo}$1${fecha_cor}\n"
}

# imprime msg verde
function print_success(){
	printf "${cor_verde}$1${fecha_cor}\n"
}

# imprime msg vermelho 
function print_erro(){
	printf "${cor_vermelho}$1${fecha_cor}\n"
}


function validacoes(){
	# se não passar nenhum parametro, dá erro
	if [ "$nome_do_script" == "" ];then
		print_erro "# Uso: ./esqueleto <nome_do_novo_script>"
		print_erro "# Ex.: ./esqueleto dummy_script"
		exit 1
	fi

	# verificando se o script já foi criado
	if [ -d $nome_do_script ]; then
		print_erro "Script já existe com esse nome"
		exit 1
	fi

	# pegando as configurações do git para preencher o cabeçalho.
	if [ $(which git > /dev/null; echo $?) == "0" ];then
		email_do_usuario="$(cd ~; git config --list | grep "user.email" | cut -d "=" -f2; cd - > /dev/null)"
		nome_do_usuario="$(cd ~; git config --list | grep "user.name" | cut -d "=" -f2; cd - > /dev/null)"
	# se não tiver git instalado ,coloque o nome do usuario corrente no script, 
	# e coloque um TODO no email
	else
		nome_do_usuario=$(whoami)
		email_do_usuario="TODO: email@email.com"
	fi
}

# função para escrever o script
function preenche_script(){
	echo "$1" >> "$nome_do_script"
}

# função para escrever o README.md
function preenche_readme(){
	echo "$1" >> $readme""
}

# Função que cria as linhas do script
function criar_script(){
	preenche_script "#!/bin/bash"
	preenche_script ""
	preenche_script "# Cabeçalho"
	preenche_script "# ----------------------------------------------------------------------------"
	preenche_script "# Descrição..."
	preenche_script "#"
	preenche_script "# Uso:"
	preenche_script "# Ex.: "
	preenche_script "#"
	preenche_script "# Autor: $nome_do_usuario <$email_do_usuario>"
	preenche_script "# Desde: $(date +%Y-%m-%d)"
	preenche_script "# Versão: 1"
	preenche_script "# ----------------------------------------------------------------------------"
	preenche_script ""
	preenche_script "# Variáveis"
	preenche_script "# ----------------------------------------------------------------------------"
	preenche_script ""
	preenche_script "# DEBUG = 0, desligado"
	preenche_script "# DEBUG = 1, ligado"
	preenche_script "DEBUG=0"
	preenche_script ""
	preenche_script "# cores"
	preenche_script "cor_amarelo=\"\033[33m\""
	preenche_script "cor_verde=\"\033[32m\""
	preenche_script "cor_vermelho=\"\033[31m\""
	preenche_script "fecha_cor=\"\033[m\""
	preenche_script ""
	preenche_script "# Funções"
	preenche_script "# ----------------------------------------------------------------------------"
	preenche_script ""
	preenche_script "function validacoes(){"
	preenche_script ""
	preenche_script "# funcao de debug"
	preenche_script "function debug(){"
	preenche_script '    [ "$DEBUG" = 1 ] && echo "[DEBUG] $*"'
	preenche_script "}"
	preenche_script ""
	preenche_script "# TODO validacoes aqui..."
	preenche_script 'echo ""'
	preenche_script ""
	preenche_script "}"
	preenche_script ""
	preenche_script "# imprime msg amarelo"
	preenche_script "function print_info(){"
	preenche_script '	printf "${cor_amarelo}$1${fecha_cor}\n"'
	preenche_script "}"
	preenche_script ""
	preenche_script "# imprime msg verde"
	preenche_script "function print_success(){"
	preenche_script '	printf "${cor_verde}$1${fecha_cor}\n"'
	preenche_script "}"
	preenche_script ""
	preenche_script "# imprime msg vermelho"
	preenche_script "function print_erro(){"
	preenche_script '	printf "${cor_vermelho}$1${fecha_cor}\n"'
	preenche_script "}"
	preenche_script ""
	preenche_script "# Main"
	preenche_script "# ----------------------------------------------------------------------------"
	preenche_script ""
	preenche_script "validacoes"
	preenche_script ""
	preenche_script "# codigo aqui..."
	preenche_script ""
	preenche_script "# TODO: trocar essa mensagem"
	preenche_script "print_success \"Ola, meu nome eh \"$nome_do_script\"\""
}

# função que cria as linhas do README.md
function criar_readme(){
	preenche_readme	"$nome_do_script"
	preenche_readme	"==========="
	preenche_readme	""
	preenche_readme	"# Descrição..."
	preenche_readme	""
	preenche_readme	"Uso: \`./"$nome_do_script"\`"
	preenche_readme	""
	preenche_readme	"Ex: \`./"$nome_do_script"\`"
}

# versionar o script com o git
function git_init(){

	if [ $(which git > /dev/null; echo $?) == "0" ];then
		git init > /dev/null
		git add "$readme" "$nome_do_script"
		git commit -m "criado o esqueleto do commit" > /dev/null
	fi

}

# Main
# ----------------------------------------------------------------------------

validacoes

# criando o diretorio do script
mkdir "$nome_do_script"

# entrando no diretorio do script
cd "$nome_do_script"

# criando um arquivo em branco com o nome do script
touch "$nome_do_script"

# dando permissão de execução pro script
chmod +x "$nome_do_script"

criar_script
criar_readme
git_init

print_success "script "$nome_do_script" criado com sucesso"
